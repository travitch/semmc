# This CI configuration is inspired by
#
# https://kodimensional.dev/github-actions
#
# It builds with a majority of the latest compiler releases from each major GHC
# revision on Linux and builds macOS and Windows against the latest GHC.
name: CI Matrix

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        pkg: ['', '-aarch32', '-coverage', '-fuzzer', '-learning', '-ppc', '-synthesis', '-toy']
        ghc: ['8.6.5', '8.8.3']
        cabal: ['3.2.0.0']
        os: [ubuntu-latest, macOS-latest, windows-latest]
        exclude:
          # - os: macOS-latest
          #   ghc: 8.8.3
          - os: macOS-latest
            ghc: 8.6.5
          # - os: windows-latest
          #   ghc: 8.8.3
          # - os: windows-latest
          #   ghc: 8.6.5

          # NOTE: Windows does not build due to a (probably spurious) unix dependency
          - os: windows-latest
            pkg: '-fuzzer'
          - os: windows-latest
            pkg: '-coverage'

    name: GHC ${{ matrix.ghc }} (${{ matrix.os }}) semmc${{ matrix.pkg }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - uses: actions/setup-haskell@v1.1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v1
      name: Cache cabal-store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - uses: actions/cache@v1
      name: Cache dist-newstyle
      with:
        path: dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}-dist-newstyle

    - name: Build
      run: |
        cabal v2-update
        cp cabal.project.newbuild cabal.project
        cabal v2-configure pkg:semmc${{ matrix.pkg }} --write-ghc-environment-files=always --enable-tests -j1
        cabal v2-build pkg:semmc${{ matrix.pkg }}

    - name: Haddock
      run: |
        cabal v2-haddock pkg:semmc${{ matrix.pkg }}

    - name: Install Solvers
      if: runner.os == 'Linux' && ( matrix.pkg == '' || matrix.pkg == '-ppc' )
      run: |
        sudo apt install software-properties-common
        sudo apt-add-repository ppa:sri-csl/formal-methods
        sudo apt update
        sudo apt install -y yices2 z3

        # NOTE: This is not running the semmc (core) tests right now because of
        # some issues with generated formulas not being supported in what4-serialize
    - name: Test
      if: runner.os == 'Linux' && ( matrix.pkg == '-aarch32' || matrix.pkg == '-ppc' )
      run: |
        cabal v2-test pkg:semmc${{ matrix.pkg }}
